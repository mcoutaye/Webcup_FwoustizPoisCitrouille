{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","name","setName","useState","title","setTitle","message","setMessage","tone","setTone","bgColor","setBgColor","textColor","setTextColor","gifUrl","setGifUrl","soundUrl","setSoundUrl","isPublished","setIsPublished","pageUrl","setPageUrl","getToneStyles","fontFamily","textShadow","fontStyle","color","letterSpacing","fontWeight","transform","textDecoration","React","createElement","className","style","_objectSpread","backgroundColor","src","alt","controls","type","value","readOnly","onClick","navigator","clipboard","writeText","resetForm","onSubmit","e","preventDefault","uniqueId","Math","random","toString","substring","concat","onChange","target","placeholder","required","label","map","t","key","rows","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.9319ad0b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [title, setTitle] = useState('');\n  const [message, setMessage] = useState('');\n  const [tone, setTone] = useState('dramatique');\n  const [bgColor, setBgColor] = useState('#000000');\n  const [textColor, setTextColor] = useState('#ffffff');\n  const [gifUrl, setGifUrl] = useState('');\n  const [soundUrl, setSoundUrl] = useState('');\n  const [isPublished, setIsPublished] = useState(false);\n  const [pageUrl, setPageUrl] = useState('');\n\n  const tones = [\n    { value: 'dramatique', label: 'Dramatique' },\n    { value: 'ironique', label: 'Ironique' },\n    { value: 'cringe', label: 'Ultra cringe' },\n    { value: 'classe', label: 'Classe' },\n    { value: 'touchant', label: 'Touchant' },\n    { value: 'absurde', label: 'Absurde' },\n    { value: 'passif-agressif', label: 'Passif-agressif' },\n    { value: 'honnete', label: 'Honnête' }\n  ];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Générer une URL unique (simulée ici)\n    const uniqueId = Math.random().toString(36).substring(2, 9);\n    setPageUrl(`https://theend.page/${uniqueId}`);\n    setIsPublished(true);\n  };\n\n  const resetForm = () => {\n    setIsPublished(false);\n    setPageUrl('');\n  };\n\n  const getToneStyles = () => {\n    switch(tone) {\n      case 'dramatique':\n        return { fontFamily: 'Georgia, serif', textShadow: '0 0 10px rgba(255,0,0,0.7)' };\n      case 'ironique':\n        return { fontFamily: 'Courier New, monospace', fontStyle: 'italic' };\n      case 'cringe':\n        return { fontFamily: 'Comic Sans MS, cursive', color: 'hotpink' };\n      case 'classe':\n        return { fontFamily: 'Times New Roman, serif', letterSpacing: '1px' };\n      case 'touchant':\n        return { fontFamily: 'Arial, sans-serif', fontWeight: 'lighter' };\n      case 'absurde':\n        return { fontFamily: 'Papyrus, fantasy', transform: 'rotate(2deg)' };\n      case 'passif-agressif':\n        return { fontFamily: 'Verdana, sans-serif', textDecoration: 'underline wavy' };\n      case 'honnete':\n        return { fontFamily: 'Helvetica, sans-serif' };\n      default:\n        return {};\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>TheEnd.page</h1>\n        <p>Créez votre page de départ inoubliable</p>\n      </header>\n\n      <main>\n        {!isPublished ? (\n          <div className=\"creator\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label>Votre nom</label>\n                <input\n                  type=\"text\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  placeholder=\"Qui part ?\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Titre de votre page</label>\n                <input\n                  type=\"text\"\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                  placeholder=\"Pourquoi je m'en vais...\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Ton de votre message</label>\n                <select value={tone} onChange={(e) => setTone(e.target.value)}>\n                  {tones.map((t) => (\n                    <option key={t.value} value={t.value}>{t.label}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Votre message</label>\n                <textarea \n                  value={message} \n                  onChange={(e) => setMessage(e.target.value)} \n                  placeholder=\"Dites tout ce que vous n'avez jamais osé dire...\" \n                  rows=\"6\" \n                  required \n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Couleur de fond</label>\n                <input \n                  type=\"color\" \n                  value={bgColor} \n                  onChange={(e) => setBgColor(e.target.value)} \n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Couleur du texte</label>\n                <input \n                  type=\"color\" \n                  value={textColor} \n                  onChange={(e) => setTextColor(e.target.value)} \n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>GIF (URL)</label>\n                <input \n                  type=\"url\" \n                  value={gifUrl} \n                  onChange={(e) => setGifUrl(e.target.value)} \n                  placeholder=\"https://example.com/your-gif.gif\" \n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Son (URL)</label>\n                <input \n                  type=\"url\" \n                  value={soundUrl} \n                  onChange={(e) => setSoundUrl(e.target.value)} \n                  placeholder=\"https://example.com/your-sound.mp3\" \n                />\n              </div>\n\n              <button type=\"submit\">Créer ma page</button>\n            </form>\n\n            <div className=\"preview\">\n              <h3>Aperçu</h3>\n              <div \n                className=\"page-preview\" \n                style={{ \n                  backgroundColor: bgColor, \n                  color: textColor,\n                  ...getToneStyles()\n                }}\n              >\n                <h2>{title || \"(Titre de votre page)\"}</h2>\n                <p>Par {name || \"(Votre nom)\"}</p>\n                <div className=\"message\">\n                  {message || \"(Votre message apparaîtra ici)\"}\n                </div>\n                {gifUrl && <img src={gifUrl} alt=\"GIF d'humeur\" className=\"gif-preview\" />}\n                {soundUrl && (\n                  <div className=\"sound-preview\">\n                    <audio controls src={soundUrl}>\n                      Votre navigateur ne supporte pas l'élément audio.\n                    </audio>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"published\">\n            <h2>Votre page est prête !</h2>\n            <div \n              className=\"final-page\" \n              style={{ \n                backgroundColor: bgColor, \n                color: textColor,\n                ...getToneStyles()\n              }}\n            >\n              <h2>{title}</h2>\n              <p>Par {name}</p>\n              <div className=\"message\">{message}</div>\n              {gifUrl && <img src={gifUrl} alt=\"GIF d'humeur\" />}\n              {soundUrl && (\n                <audio controls src={soundUrl}>\n                  Votre navigateur ne supporte pas l'élément audio.\n                </audio>\n              )}\n            </div>\n            <div className=\"share-section\">\n              <p>Partagez votre page :</p>\n              <input type=\"text\" value={pageUrl} readOnly />\n              <button onClick={() => navigator.clipboard.writeText(pageUrl)}>\n                Copier le lien\n              </button>\n              <button onClick={resetForm}>Créer une autre page</button>\n            </div>\n          </div>\n        )}\n      </main>\n\n      <footer>\n        <p>TheEnd.page - Parce que si c'est la fin, autant la rendre inoubliable.</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}